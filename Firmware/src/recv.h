/***************************************************************************//**
 * @file        recv.c
 * @author      Created: CLU
 * @brief       Messung des Empfängersignals
 ******************************************************************************/

#ifndef RECV_H
#define RECV_H

/******************************************************************************
 Imported Include References
******************************************************************************/
#include "common.h"

/******************************************************************************
 Public defines
******************************************************************************/

/**************************************************************************//**
 * @brief    initialisiert die hardwareregister
 *****************************************************************************/
void recv_init(void);

/**************************************************************************//**
 * @brief    zum prüfen ob failsafe aktiv ist oder nicht
 *
 * @return   true, wenn failsafe aktiv ist, false wenn empfänger ok
 *****************************************************************************/
bool recv_failsafe(void);

/**************************************************************************//**
 * @brief    zum auslesen des aktuellen Empfängersignals. Der zurückgegebene
 *           wert ist in prozent (wie bei futaba anzeige)
 *****************************************************************************/
int16_t recv_signal(void);

/**************************************************************************//**
 * @brief    zum auslesen des aktuellen Empfängersignals. Der zurückgegebene
 *           wert ist in us pulslänge
 *****************************************************************************/
uint16_t recv_rawSignal(void);

/**************************************************************************//**
 * @brief    interrupt handler
 *****************************************************************************/
void recv_isr(void);

/**************************************************************************//**
 * @brief    external interrupt handler
 *****************************************************************************/
void recv_hisr(void);

#endif //RECV_H

