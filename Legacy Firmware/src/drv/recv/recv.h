/***************************************************************************//**
 * @file        recv.h
 * @author      Created: CLU
 *              $Author: CLU $
 *              $LastChangedRevision: 440 $
 *              $LastChangedDate: 2010-05-20 09:59:35 +0200 (Do, 20 Mai 2010) $
 * @brief       Messung der Empfängersignale
 ******************************************************************************/

#ifndef RECV_H
#define RECV_H

/******************************************************************************
 Imported Include References
******************************************************************************/
#include "common.h"

/******************************************************************************
 Public defines
******************************************************************************/

/**************************************************************************//**
 * @brief    initialisiert die nötigen hardwareregister
 *****************************************************************************/
void recv_init(void);

/**************************************************************************//**
 * @brief    zum prüfen ob failsafe aktiv ist oder nicht
 *
 * @return   true, wenn failsafe aktiv ist, false wenn empfänger ok
 *****************************************************************************/
bool recv_failsafe(void);

/**************************************************************************//**
 * @brief    zum auslesen des aktuellen Empfängersignals. Der zurückgegebene
 *           wert ist in prozent (wie bei futaba anzeige)
 *****************************************************************************/
s16 recv_signal(void);

/**************************************************************************//**
 * @brief    zum auslesen des aktuellen Empfängersignals. Der zurückgegebene
 *           wert ist unskaliert
 *****************************************************************************/
u16 recv_rawSignal(void);

/**************************************************************************//**
 * @brief    recv_hisr
 *****************************************************************************/
void recv_hisr(void);

/**************************************************************************//**
 * @brief    interrupt handler
 *****************************************************************************/
void recv_isr(void);

/**************************************************************************//**
 * @brief    prüft ob rx 2 ein gültiges Signal liefert
 *****************************************************************************/
bool recv_failsafe_rx2(void);
/**************************************************************************//**
 * @brief    rx2Signal
 *****************************************************************************/
s16 recv_signal_rx2(void);
/**************************************************************************//**
 * @brief    external interrupt handler
 *****************************************************************************/
void recv_hisr(void);

#endif //RECV_H

